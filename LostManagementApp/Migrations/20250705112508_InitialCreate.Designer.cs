// <auto-generated />
using System;
using LostManagementApp.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LostManagementApp.Migrations
{
    [DbContext(typeof(LostContext))]
    [Migration("20250705112508_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LostManagementApp.Models.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("login_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LoginId"));

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expire_date");

                    b.Property<DateTime>("LoginDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("login_date");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("LoginId");

                    b.HasIndex("UserId");

                    b.ToTable("login_check");
                });

            modelBuilder.Entity("LostManagementApp.Models.Lost", b =>
                {
                    b.Property<int>("LostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lost_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LostId"));

                    b.Property<DateTime>("FoundDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("found_date");

                    b.Property<bool>("IsFound")
                        .HasColumnType("boolean")
                        .HasColumnName("is_found");

                    b.Property<DateTime>("LostDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lost_date");

                    b.Property<string>("LostDetailedPlace")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lost_detailed_place");

                    b.Property<string>("LostItem")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lost_item");

                    b.Property<string>("LostPlace")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lost_place");

                    b.Property<DateTime>("RegistrateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registrate_date");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("LostId");

                    b.HasIndex("UserId");

                    b.ToTable("losts");
                });

            modelBuilder.Entity("LostManagementApp.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<DateTime>("RegistrateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("registrate_date");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_date");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("LostManagementApp.Models.Login", b =>
                {
                    b.HasOne("LostManagementApp.Models.Users", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LostManagementApp.Models.Lost", b =>
                {
                    b.HasOne("LostManagementApp.Models.User", null)
                        .WithMany("Losts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LostManagementApp.Models.User", b =>
                {
                    b.Navigation("Logins");

                    b.Navigation("Losts");
                });
#pragma warning restore 612, 618
        }
    }
}
